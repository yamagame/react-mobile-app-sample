{"version":3,"sources":["stories/Button.tsx","stories/Header.tsx","stories/Label.tsx","stories/Page.tsx","stories/TextField.tsx","actions/index.ts","components/Row.tsx","ErrorFallback.tsx","components/ThrowButton.tsx","containers/Login/index.tsx","containers/Top/index.tsx","containers/User/index.tsx","containers/SignUp/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","primary","color","backgroundColor","label","props","mode","type","className","join","style","Header","hideButton","user","onLogin","onLogout","onCreateAccount","onClick","Label","size","fontSize","Page","children","React","useState","online","setOnline","useEffect","onChangeState","e","window","navigator","onLine","addEventListener","removeEventListener","TextField","password","value","onChange","ChangeUserStateAction","ChangeUserState","payload","LogoutAction","Row","center","ErrorFallback","error","resetErrorBoundary","message","ThrowButton","errorMessage","count","setCounter","Error","c","Login","dispatch","useDispatch","history","useHistory","selector","useSelector","state","username","setUsername","setPassword","push","FallbackComponent","onReset","undefined","target","Top","User","counter","SignUp","App","path","process","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialAppState","appState","action","Actions","s","store","reduxCreateStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7272918.chunk.js","sourcesContent":["import React from 'react'\nimport 'index.css'\n\nexport interface ButtonProps {\n  primary?: boolean\n  color?: string\n  backgroundColor?: string\n  label: string\n  onClick?: () => void\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button: React.FC<ButtonProps> = ({\n  primary = false,\n  color,\n  backgroundColor,\n  label,\n  ...props\n}) => {\n  const mode = primary ? 'text-blue-400' : 'text-gray-400'\n  return (\n    <button\n      type=\"button\"\n      className={[\n        'rounded p-2 px-4 mx-2 border',\n        color || mode,\n      ].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  )\n}\n","import React from 'react'\nimport 'index.css'\n\nimport { Button } from './Button'\n\nexport interface HeaderProps {\n  hideButton?: boolean\n  user?: {}\n  onLogin: () => void\n  onLogout: () => void\n  onCreateAccount: () => void\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  hideButton,\n  user,\n  onLogin,\n  onLogout,\n  onCreateAccount,\n}) => (\n  <header>\n    <div className=\"flex border-b h-20\">\n      <div className=\"m-4 text-xl pt-2 sm:inline-block hidden\">\n        <h1>React-Mobile-App-Sample</h1>\n      </div>\n      <div className=\"flex-grow\" />\n      {hideButton ? null : (\n        <div className=\"m-4\">\n          {user ? (\n            <Button onClick={onLogout} label=\"Log out\" />\n          ) : (\n            <>\n              <Button\n                primary\n                onClick={onLogin}\n                label=\"Log in\"\n              />\n              <Button\n                primary\n                onClick={onCreateAccount}\n                label=\"Sign up\"\n              />\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  </header>\n)\n","import React from 'react'\nimport 'index.css'\n\nexport interface LabelProps {\n  label: string\n  size?: 'small' | 'medium' | 'large'\n  color?: string\n}\n\nexport const Label: React.FC<LabelProps> = ({\n  label,\n  size = 'large',\n  color = 'text-gray-600',\n  ...props\n}) => {\n  const fontSize =\n    size === 'small'\n      ? 'text-xs'\n      : size === 'medium'\n      ? 'text-xl'\n      : 'text-2xl'\n  return (\n    <div className={`inline-block ${color} ${fontSize}`}>\n      {label}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Header } from './Header'\nimport { Label } from './Label'\nimport 'index.css'\n\nexport interface PageProps {\n  hideButton?: boolean\n  user?: {}\n  onLogin: () => void\n  onLogout: () => void\n  onCreateAccount: () => void\n}\n\nexport const Page: React.FC<PageProps> = ({\n  hideButton,\n  children,\n  user,\n  onLogin,\n  onLogout,\n  onCreateAccount,\n}) => {\n  const [online, setOnline] = React.useState(true)\n  React.useEffect(() => {\n    const onChangeState = (e: any) => {\n      setOnline(window.navigator.onLine)\n    }\n    window.addEventListener('offline', onChangeState)\n    window.addEventListener('online', onChangeState)\n    return () => {\n      window.removeEventListener('offline', onChangeState)\n      window.removeEventListener('online', onChangeState)\n    }\n  }, [])\n  return (\n    <article>\n      <Header\n        hideButton={hideButton}\n        user={user}\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      />\n      <section className=\"container mx-auto mt-4\">\n        <div className=\"m-5\">\n          {online ? (\n            <Label\n              size=\"medium\"\n              color=\"text-green-400\"\n              label=\"オンライン\"\n            />\n          ) : (\n            <Label\n              size=\"medium\"\n              color=\"text-red-400\"\n              label=\"オフライン\"\n            />\n          )}\n          {children}\n        </div>\n      </section>\n    </article>\n  )\n}\n","import React from 'react'\nimport 'index.css'\n\nexport interface TextFieldProps {\n  password?: boolean\n  label: string\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const TextField: React.FC<TextFieldProps> = ({\n  password,\n  label,\n  value,\n  onChange,\n  ...props\n}) => {\n  return (\n    <div className=\"flex flex-row justify-center mb-1\">\n      <div className=\"inline-block mr-2 pt-2 text-gray-400 text-xl w-32\">\n        {label}\n      </div>\n      <input\n        className=\"inline-block border rounded p-2 px-4 mx-2\"\n        type={password ? 'password' : 'text'}\n        onChange={onChange}\n        value={value}\n        {...props}\n      />\n    </div>\n  )\n}\n","import * as Models from 'models'\n\nexport type ChangeAppStateAction = {\n  type: string\n  payload: Models.AppState\n}\n\nexport const ChangeUserStateAction = 'change state'\nexport const ChangeUserState = (user: Models.User) => {\n  return {\n    type: ChangeUserStateAction,\n    payload: {\n      ...user,\n    },\n  }\n}\n\nexport const LogoutAction = 'logout'\nexport const Logout = () => {\n  return {\n    type: LogoutAction,\n  }\n}\n","import React from 'react'\n\nexport type RowProps = {\n  center?: boolean\n}\n\nexport const Row: React.FC<RowProps> = ({\n  children,\n  center = false,\n}) => {\n  return (\n    <div\n      className={`flex flex-row ${\n        center ? 'justify-center' : ''\n      }`}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { FallbackProps } from 'react-error-boundary'\nimport { Page } from 'stories/Page'\nimport { Label } from 'stories/Label'\nimport { Button } from 'stories/Button'\nimport { Row } from 'components/Row'\n\nconst ErrorFallback = (): React.FC<FallbackProps> => {\n  const onLogin = () => {}\n  const onLogout = () => {}\n  const onCreateAccount = () => {}\n  return ({ error, resetErrorBoundary }) => {\n    return (\n      <Page\n        hideButton\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      >\n        <Row>\n          <div className=\"mt-8\">\n            <Label label={`${error!.message}`} />\n          </div>\n        </Row>\n        <Row>\n          <div className=\"mt-8\">\n            <Button\n              label=\"指定ページへ戻る\"\n              onClick={resetErrorBoundary}\n            />\n          </div>\n        </Row>\n      </Page>\n    )\n  }\n}\n\nexport default ErrorFallback\n","import React from 'react'\nimport { Button } from 'stories/Button'\n\nexport type ThrowButtonProps = {\n  errorMessage: string\n}\n\nexport const ThrowButton: React.FC<ThrowButtonProps> = ({\n  errorMessage,\n}) => {\n  const [count, setCounter] = React.useState(0)\n  React.useEffect(() => {\n    if (count > 0) {\n      throw new Error(errorMessage)\n    }\n  }, [count, errorMessage])\n  const onClick = () => {\n    setCounter((c) => c + 1)\n  }\n  return (\n    <Button\n      color=\"text-red-400\"\n      label=\"エラーをスロー\"\n      onClick={onClick}\n    />\n  )\n}\n","import React from 'react'\nimport * as Models from 'models'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Page } from 'stories/Page'\nimport { Button } from 'stories/Button'\nimport { Label } from 'stories/Label'\nimport { TextField } from 'stories/TextField'\nimport { useHistory } from 'react-router-dom'\nimport { ChangeUserState } from 'actions'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport ErrorFallback from 'ErrorFallback'\nimport { ThrowButton } from 'components/ThrowButton'\nimport { Row } from 'components/Row'\n\nexport type LoginProps = {}\n\nexport const Login: React.FC<LoginProps> = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const selector = useSelector<\n    Models.AppState,\n    Models.AppState\n  >((state) => state)\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  React.useEffect(() => {\n    if (selector.user) {\n      history.push('/user')\n    }\n  }, [selector, history])\n  const onLogin = () => {}\n  const onLogout = () => {}\n  const onCreateAccount = () => {}\n  const onNext = () => {\n    if (username !== '') {\n      dispatch(ChangeUserState({ username }))\n    }\n  }\n  const onCancel = () => {\n    history.push('/')\n  }\n  const onChangeAccountId = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setUsername(e.target.value)\n  }\n  const onChangePassword = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPassword(e.target.value)\n  }\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback()}\n      onReset={() => {\n        history.push('/login')\n      }}\n    >\n      <Page\n        hideButton={true}\n        user={undefined}\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      >\n        <Row>\n          <div className=\"mb-8\">\n            <Label label=\"Login\" />\n          </div>\n        </Row>\n        <Row center>\n          <TextField\n            label=\"アカウントID\"\n            onChange={onChangeAccountId}\n            value={username}\n          />\n        </Row>\n        <Row center>\n          <TextField\n            label=\"パスワード\"\n            password\n            onChange={onChangePassword}\n            value={password}\n          />\n        </Row>\n        <Row center>\n          <div className=\"ml-28 mt-8\">\n            <Button\n              primary\n              label=\"ログイン\"\n              onClick={onNext}\n            />\n            <Button label=\"キャンセル\" onClick={onCancel} />\n          </div>\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <ThrowButton errorMessage=\"ログインページでエラー発生\" />\n          </div>\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <div>\n              (アカウントIDに適当な文字を入れるとユーザページへ遷移します)\n            </div>\n          </div>\n        </Row>\n      </Page>\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport * as Models from 'models'\nimport { useSelector } from 'react-redux'\nimport { Page } from 'stories/Page'\nimport { useHistory } from 'react-router-dom'\nimport { Label } from 'stories/Label'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport ErrorFallback from 'ErrorFallback'\nimport { ThrowButton } from 'components/ThrowButton'\nimport { Row } from 'components/Row'\n\nexport type TopProps = {}\n\nexport const Top: React.FC<TopProps> = () => {\n  const history = useHistory()\n  const user = useSelector<\n    Models.AppState,\n    Models.User | undefined\n  >((state) => state.user)\n  React.useEffect(() => {\n    if (user) {\n      history.push('/user')\n    }\n  }, [user, history])\n  const onLogin = () => {\n    history.push('/login')\n  }\n  const onLogout = () => {}\n  const onCreateAccount = () => {\n    history.push('/signup')\n  }\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback()}\n      onReset={() => {\n        history.push('/top')\n      }}\n    >\n      <Page\n        user={user}\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      >\n        <Row>\n          <div className=\"mb-8\">\n            <Label label=\"Top Page\" />\n          </div>\n        </Row>\n      </Page>\n      <Row center>\n        <div className=\"mt-8\">\n          <ThrowButton errorMessage=\"トップページでエラー発生\" />\n        </div>\n      </Row>\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport * as Models from 'models'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Page } from 'stories/Page'\nimport { Label } from 'stories/Label'\nimport { Button } from 'stories/Button'\nimport { useHistory } from 'react-router-dom'\nimport * as Actions from 'actions'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport ErrorFallback from 'ErrorFallback'\nimport { ThrowButton } from 'components/ThrowButton'\nimport { Row } from 'components/Row'\n\nexport type UserProps = {}\n\nexport const User: React.FC<UserProps> = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const user = useSelector<\n    Models.AppState,\n    Models.User | undefined\n  >((state) => state.user)\n  const [counter, setCounter] = React.useState(0)\n  React.useEffect(() => {\n    if (!user) {\n      history.push('/')\n    }\n  }, [user, history])\n  const onLogin = () => {}\n  const onLogout = () => {\n    dispatch(Actions.Logout())\n  }\n  const onCreateAccount = () => {}\n  const onClick = () => {\n    setCounter((c) => c + 1)\n  }\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback()}\n      onReset={() => {\n        setCounter(0)\n        history.push('/user')\n      }}\n    >\n      <Page\n        user={user}\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      >\n        <Row>\n          <div className=\"mb-8\">\n            <Label label={`User: ${user?.username}`} />\n          </div>\n        </Row>\n        <Row center>\n          <Label label={`${counter}`} />\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <Button\n              label=\"カウントアップ\"\n              onClick={onClick}\n            />\n          </div>\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <ThrowButton errorMessage=\"ユーザーページでエラー発生\" />\n          </div>\n        </Row>\n      </Page>\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport * as Models from 'models'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Page } from 'stories/Page'\nimport { Button } from 'stories/Button'\nimport { Label } from 'stories/Label'\nimport { TextField } from 'stories/TextField'\nimport { useHistory } from 'react-router-dom'\nimport { ChangeUserState } from 'actions'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport ErrorFallback from 'ErrorFallback'\nimport { ThrowButton } from 'components/ThrowButton'\nimport { Row } from 'components/Row'\n\nexport type SignUpProps = {}\n\nexport const SignUp: React.FC<SignUpProps> = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const selector = useSelector<\n    Models.AppState,\n    Models.AppState\n  >((state) => state)\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  React.useEffect(() => {\n    if (selector.user) {\n      history.push('/user')\n    }\n  }, [selector, history])\n  const onLogin = () => {}\n  const onLogout = () => {}\n  const onCreateAccount = () => {}\n  const onNext = () => {\n    if (username !== '') {\n      dispatch(ChangeUserState({ username }))\n    }\n  }\n  const onCancel = () => {\n    history.push('/')\n  }\n  const onChangeAccountId = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setUsername(e.target.value)\n  }\n  const onChangePassword = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPassword(e.target.value)\n  }\n  return (\n    <ErrorBoundary\n      FallbackComponent={ErrorFallback()}\n      onReset={() => {\n        history.push('/signup')\n      }}\n    >\n      <Page\n        hideButton={true}\n        user={undefined}\n        onLogin={onLogin}\n        onLogout={onLogout}\n        onCreateAccount={onCreateAccount}\n      >\n        <Row>\n          <div className=\"mb-8\">\n            <Label label=\"SignUp\" />\n          </div>\n        </Row>\n        <Row center>\n          <TextField\n            label=\"アカウントID\"\n            onChange={onChangeAccountId}\n            value={username}\n          />\n        </Row>\n        <Row center>\n          <TextField\n            label=\"パスワード\"\n            password\n            onChange={onChangePassword}\n            value={password}\n          />\n        </Row>\n        <Row center>\n          <div className=\"ml-28 mt-8\">\n            <Button\n              primary\n              label=\"ログイン\"\n              onClick={onNext}\n            />\n            <Button label=\"キャンセル\" onClick={onCancel} />\n          </div>\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <ThrowButton errorMessage=\"サインアップページでエラー発生\" />\n          </div>\n        </Row>\n        <Row center>\n          <div className=\"mt-8\">\n            <div>\n              (アカウントIDに適当な文字を入れるとユーザページへ遷移します)\n            </div>\n          </div>\n        </Row>\n      </Page>\n    </ErrorBoundary>\n  )\n}\n","import React from 'react'\nimport 'App.css'\nimport { Login } from 'containers/Login'\nimport { Top } from 'containers/Top'\nimport { User } from 'containers/User'\nimport { SignUp } from 'containers/SignUp'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/login`}>\n          <Login />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/signup`}>\n          <SignUp />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/user`}>\n          <User />\n        </Route>\n        <Route\n          exact\n          path={[\n            `${process.env.PUBLIC_URL}/top`,\n            `${process.env.PUBLIC_URL}/`,\n          ]}\n        >\n          <Top />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport {\n  createStore as reduxCreateStore,\n  Reducer,\n} from 'redux'\nimport { AppState } from 'models'\nimport * as Actions from 'actions'\n\nconst initialAppState = {\n  user: undefined,\n}\n\nexport const appState: Reducer<\n  AppState,\n  Actions.ChangeAppStateAction\n> = (state, action) => {\n  if (state) {\n    switch (action.type) {\n      case Actions.ChangeUserStateAction:\n        return {\n          ...state,\n          user: {\n            ...state.user,\n            ...action.payload,\n          },\n        } as AppState\n      case Actions.LogoutAction: {\n        const s = { ...state }\n        delete s.user\n        return s\n      }\n      default:\n        return state\n    }\n  }\n  return initialAppState\n}\n\nconst store = reduxCreateStore(appState, initialAppState)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}